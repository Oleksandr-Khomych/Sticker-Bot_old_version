# -*- coding: utf-8 -*-
from config import *
from main import main_message

# –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ------------------------


@bot.message_handler(func=lambda message: message.text == '‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
def cancel_order(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    cursor.execute(
        "UPDATE orders SET order_in_process = ?, delivery = ?, delivery_address = ?, order_id = ? WHERE user_id = ?",
        ('False', None, None, None, message.from_user.id,))
    bot.send_message(message.from_user.id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.')
    main_message(message)
    conn.commit()
    cursor.close()
    conn.close()


@bot.message_handler(func=lambda message: message.text == '‚úÖ–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚úÖ')
def payment_type(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    cursor.execute("SELECT order_in_process FROM orders WHERE user_id = ?", (message.from_user.id,))
    order_in_process = cursor.fetchone()
    if order_in_process[0] == 'True':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton('‚úÖ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É‚úÖ')
        button2 = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
        keyboard.add(button1, button2)
        cursor.execute("SELECT order_id FROM orders WHERE user_id = ?", (message.from_user.id,))
        result = cursor.fetchone()
        bot.send_message(message.from_user.id, f'–û—Ç–ª–∏—á–Ω–æ. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–∫–∞–∑ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É –Ω–∞ —Å—á–µ—Ç **** **** **** ****(–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞({result[0]}üìù) –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–µ–≤–æ–¥—É —Å—Ä–µ–¥—Å—Ç–≤) –∏ –æ–∂–∏–¥–∞–π—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ–π —Å–ª—É–∂–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏', reply_markup=keyboard)
    conn.commit()
    cursor.close()
    conn.close()


@bot.message_handler(func=lambda message: message.text == '‚úÖ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É‚úÖ')
def complete(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    cursor.execute("SELECT order_in_process FROM orders WHERE user_id = ?", (message.from_user.id,))
    order_in_process = cursor.fetchone()
    if order_in_process[0] == 'True':
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True, resize_keyboard=True)
        keyboard.add(main_menu_button)
        bot.send_message(message.from_user.id, '–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É', reply_markup=keyboard)
        cursor.execute("SELECT * FROM orders WHERE user_id = ?", (message.from_user.id,))
        result = cursor.fetchone()
        # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ë–î. (—â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —Å–∏—Ç—É–∞—Ç–∏–≤–Ω–æ–≥–æ –±–∞–≥–∞)
        if not result:
            cursor.execute("INSERT INTO orders VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                           (message.from_user.id, None, None, None, None, None, None, None))
            cursor.execute("SELECT * FROM orders WHERE user_id = ?", (message.from_user.id,))
            result = cursor.fetchone()
            MyLoger.error(f"Error get user by id! message.from_user.id={message.from_user.id}")
        user_id, order_in_process, delivery, city, delivery_address, full_name, phone, order_id = result
        cursor.execute("SELECT * FROM basket WHERE user_id = ?", (message.from_user.id,))
        article = cursor.fetchall()
        string = '–ó–∞–∫–∞–∑:'
        if article:
            for el in article:
                string += f'\n–¢–æ–≤–∞—Ä {el[1]}\n C–µ—Ç: {el[2]} —Å—Ç–∏–∫–µ—Ä–æ–≤\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤: {el[3]}'
        delivery_string = 'Error #492'
        delivery_string = delivery_type_show[delivery]
        for adm_id in admins_id:
            bot.send_message(adm_id,
                             f'üìå–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\nuser_id = {message.from_user.id}\nüí°{string}\n\nüöö–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery}\nüèô–ì–æ—Ä–æ–¥: {city}\nüè¢{delivery_string}: {delivery_address}\nüë§–ü–æ–ª–Ω–æ–µ –∏–º—è: {full_name}\nüì±–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ : {phone}\nüìåid_–ó–∞–∫–∞–∑–∞ : {order_id}')
        cursor.execute("INSERT INTO order_generated VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
                       (message.from_user.id, order_id, '–û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', None, string[7:],
                        delivery,
                        city, delivery_address, full_name, phone))
        cursor.execute("DELETE FROM basket WHERE user_id = ? ", (message.from_user.id,))
        cursor.execute(
            "UPDATE orders SET order_in_process = ?, delivery = ?, delivery_address = ?, order_id = ? WHERE user_id = ?",
            ('False', None, None, None, message.from_user.id,))
    conn.commit()
    cursor.close()
    conn.close()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
@bot.message_handler(content_types=['contact', 'text'])
def get_order(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM orders WHERE user_id = ?", (message.from_user.id,))
    result = cursor.fetchone()
    if not result:
        cursor.execute("INSERT INTO orders VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                       (message.from_user.id, None, None, None, None, None, None, None))
        cursor.execute("SELECT * FROM orders WHERE user_id = ?", (message.from_user.id,))
        result = cursor.fetchone()
        MyLoger.error(f"Error get user by id! message.from_user.id={message.from_user.id}")
    user_id, order_in_process, delivery, city, delivery_address, full_name, phone, order_id = result
    if order_in_process == 'True':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        # –Ø–∫—â–æ –ø—Ä–∞–≤–¥–∞, –∑–Ω–∞—á–∏—Ç—å –æ—Ñ–æ—Ä–º–ª—é—î–º–æ –∑–∞–∫–∞–∑
        if not delivery:
            if message.text == 'üöö–ù–æ–≤–∞—è –ü–æ—á—Ç–∞üöö' or message.text == 'üöö–£–∫—Ä –ü–æ—á—Ç–∞üöö':
                cursor.execute("UPDATE orders SET delivery = ? WHERE user_id = ? ",
                               (message.text[1:-1], message.from_user.id))
                ordering_stage(message, cursor)
            else:
                button1 = types.KeyboardButton('üöö–ù–æ–≤–∞—è –ü–æ—á—Ç–∞üöö')
                button2 = types.KeyboardButton('üöö–£–∫—Ä –ü–æ—á—Ç–∞üöö')
                button3 = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
                keyboard.row(button1, button2)
                keyboard.row(button3)
                bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏ (—Å–º. –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É)', reply_markup=keyboard)
        elif not city:
            cursor.execute("UPDATE orders SET city = ? WHERE user_id = ?", (message.text, message.from_user.id))
            ordering_stage(message, cursor)
        elif not delivery_address:
            cursor.execute("UPDATE orders SET delivery_address = ? WHERE user_id = ?", (message.text, message.from_user.id))
            ordering_stage(message, cursor)
        elif not full_name:
            cursor.execute("UPDATE orders SET full_name = ? WHERE user_id = ?", (message.text, message.from_user.id))
            ordering_stage(message, cursor)
        elif not phone:
            if message.text is None:
                cursor.execute("UPDATE orders SET phone = ? WHERE user_id = ?", (message.contact.phone_number, message.from_user.id))
            else:
                cursor.execute("UPDATE orders SET phone = ? WHERE user_id = ?", (message.text, message.from_user.id))
            ordering_stage(message, cursor)
    conn.commit()
    cursor.close()
    conn.close()


# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å(–≤–∏–∫–ª–∏–∫–∞—î—Ç—å –∑ get_order())
def ordering_stage(message, cursor):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    cursor.execute("SELECT * FROM orders WHERE user_id = ?", (message.from_user.id,))
    result = cursor.fetchone()
    if not result:
        cursor.execute("INSERT INTO orders VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                       (message.from_user.id, None, None, None, None, None, None, None))
        cursor.execute("SELECT * FROM orders WHERE user_id = ?", (message.from_user.id,))
        result = cursor.fetchone()
        MyLoger.error(f"Error get user by id! message.from_user.id={message.from_user.id}")
    user_id, order_in_process, delivery, city, delivery_address, full_name, phone, order_id = result
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if not city:
        button = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
        keyboard.add(button)
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞:', reply_markup=keyboard)
    elif not delivery_address:
        button = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
        keyboard.add(button)
        string = 'Error #924'
        string = delivery_type_edit[delivery]
        bot.send_message(message.from_user.id, string, reply_markup=keyboard)
    elif not full_name:
        button = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
        keyboard.add(button)
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:', reply_markup=keyboard)
    elif not phone:
        button = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞üì≤', request_contact=True)
        button2 = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
        keyboard.add(button)
        keyboard.add(button2)
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', reply_markup=keyboard)
    elif phone:
        button = types.KeyboardButton('‚úÖ–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚úÖ')
        button1 = types.KeyboardButton('‚úèÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑‚úèÔ∏è')
        button2 = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå')
        keyboard.row(button)
        keyboard.row(button1, button2)
        cursor.execute("SELECT * FROM basket WHERE user_id = ?", (message.from_user.id,))
        article = cursor.fetchall()
        string = '–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:'
        if article:
            for el in article:
                string += f'\nüí°–¢–æ–≤–∞—Ä {el[1]}\n üí°C–µ—Ç: {el[2]} —Å—Ç–∏–∫–µ—Ä–æ–≤\n üí°–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤: {el[3]}'
        order_string = f'üìå–ó–∞–∫–∞–∑ ‚Ññ{order_id}\nüìç–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n{string}'
        delivery_string = 'Error # 489'
        delivery_string = delivery_type_show[delivery]
        bot.send_message(message.from_user.id,
                         f'{order_string}\nüöö–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery}\nüèô–ì–æ—Ä–æ–¥: {city}\nüè¢{delivery_string}: {delivery_address}\nüë§–ü–æ–ª–Ω–æ–µ –∏–º—è: {full_name}\nüì±–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ : {phone}',
                         reply_markup=keyboard)
