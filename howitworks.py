# -*- coding: utf-8 -*-
from config import *


@bot.message_handler(func=lambda message: message.text == '‚ùì–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç‚ùì')
def howitworks(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    item_buy = telebot.types.KeyboardButton('üìå–ö–∞–∫ –∫—É–ø–∏—Ç—å?')
    item_delivery = telebot.types.KeyboardButton('üìå–í—Å–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ')
    item_security = telebot.types.KeyboardButton('üìå–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –∑–¥–µ—Å—å –æ–ø–ª–∞—á–∏–≤–∞—Ç—å?')
    item_botinfo = telebot.types.KeyboardButton('üìå–î–ª—è —á–µ–≥–æ —ç—Ç–æ—Ç –±–æ—Ç?')
    item_tracking = telebot.types.KeyboardButton('üìå–ö–∞–∫ —É–∑–Ω–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ª–∏ —Ç–æ–≤–∞—Ä?')
    item_stikerinfo = telebot.types.KeyboardButton('üìå–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∏–∫–µ—Ä–∞—Ö')
    item_main = telebot.types.KeyboardButton('üë£–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüë£')
    markup.row(item_buy, item_delivery)
    markup.row(item_security, item_botinfo)
    markup.row(item_tracking, item_stikerinfo)
    markup.row(item_main)
    bot.send_message(message.chat.id, "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üìù–û –Ω–∞—Åüìù')
def info(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton('üë£–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüë£'))
    bot.send_message(message.chat.id, '''üöö–†–∞–±–æ—Ç–∞–µ–º –ø–æ –£–∫—Ä–∞–∏–Ω–µ.
‚úâÔ∏è–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:
üì©Email: stickerspackua@gmail.com
üì∏Instagram: @stickers_pack_ua
üì≤–¢–µ–ª–µ—Ñ–æ–Ω: 
+38 0 (63) 278 80 19
+38 0 (99) 019 45 13''', reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text == 'üìå–ö–∞–∫ –∫—É–ø–∏—Ç—å?')
def buy(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    bot.send_message(message.chat.id, "‚úÖ–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Å—Ç–∏–∫–µ—Ä—ã, –∑–∞–π–¥–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ö—É–ø–∏—Ç—å¬ª‚û°Ô∏è–ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è —Å—Ç–∏–∫–µ—Ä –ø–∞–∫‚û°Ô∏è–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –≤–∞–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã‚û°Ô∏è–∑–∞–ø–æ–º–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.‚úÖ", reply_markup=False)


@bot.message_handler(func=lambda message: message.text == 'üìå–í—Å–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ')
def delivery(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    bot.send_message(message.chat.id, '''‚úÖ–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π –ø–æ –≤—Å–µ–π –£–∫—Ä–∞–∏–Ω–µ.üöö
‚úÖ–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç 1 –¥–æ 3 –¥–Ω–µ–π. üöö
‚úÖ–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã —Å–¥–µ–ª–∞–ª–∏ –∑–∞–∫–∞–∑ –º—ã –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–º —ç–≥–æ –≤–∞–º. üöö
‚úÖ–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä—ã  –≤ –ª—é–±–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è.üöö
‚úÖ–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π - 40 –≥—Ä–Ω. üöö
‚úÖ–ü—Ä–∏ –∑–∞–∫–∞–∑–µ –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º –ø–æ—á—Ç–∞ —Å–Ω–∏–º–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—É –∑–∞ –ø–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–∑–º–µ—Ä–µ 20 –≥—Ä–Ω üöö''',
                     reply_markup=False)


@bot.message_handler(func=lambda message: message.text == 'üìå–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –∑–¥–µ—Å—å –æ–ø–ª–∞—á–∏–≤–∞—Ç—å?')
def security(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    bot.send_message(message.chat.id, '''–î–∞, –≤—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã. üîí
–û–ø–ª–∞—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –†24. üîí
–ó–∞ –ø–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–≤–µ—á–∞–µ—Ç –ü—Ä–∏–≤–∞—Ç –ë–∞–Ω–∫.üîí
–î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤–≤–æ–¥–∏—Ç–µ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. üìùüîí''', reply_markup=False)


@bot.message_handler(func=lambda message: message.text == 'üìå–î–ª—è —á–µ–≥–æ —ç—Ç–æ—Ç –±–æ—Ç?')
def botinfo(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    bot.send_message(message.chat.id, '''‚úÖ–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–∫–∞–∑–∞. üß†
‚úÖ–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∫—É–ø–∏—Ç—å —Å—Ç–∏–∫–µ—Ä—ã –Ω–µ –æ–±—â–∞—è—Å—å –ø—Ä–∏ —ç—Ç–æ–º —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º. üß†
‚úÖ–ü–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ  –Ω–∞–º –∏ –º—ã –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞–µ–º.üß†
‚úÖ–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º —è–∑—ã–∫–æ–º.üß†
‚úÖ–ë–æ—Ç —Å—ç–∫–æ–Ω–æ–º–∏—Ç –≤–∞—à–µ –≤—Ä–µ–º—è.üß†''', reply_markup=False)


@bot.message_handler(func=lambda message: message.text == 'üìå–ö–∞–∫ —É–∑–Ω–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ª–∏ —Ç–æ–≤–∞—Ä?')
def tracking(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    bot.send_message(message.chat.id, '''‚úÖ–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ù–æ–≤–æ–π –ü–æ—á—Ç—ã –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –∏–ª–∏ –ü–ö. üìÆ
‚úÖ–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º —Å—Ç–∏–∫–µ—Ä—ã, —É –≤–∞—Å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ –ù–æ–≤–æ–π –ü–æ—á—Ç—ã –ø–æ—è–≤–∏—Ç—Å—è –≤–∞—à–∞ –ø–æ—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å. üìÆ
‚úÖ–ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 2-—Ö –¥–Ω–µ–π –º—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–º —Å—Ç–∏–∫–µ—Ä—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.üì©''', reply_markup=False)


@bot.message_handler(func=lambda message: message.text == 'üìå–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∏–∫–µ—Ä–∞—Ö')
def stikerinfo(message):
    MyLoger.debug(f'message.from_user.id={message.from_user.id}|message.from_user.first_name={message.from_user.first_name}|message.from_user.username={message.from_user.username}')
    bot.send_message(message.chat.id, '''‚úÖ–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤ 5—Ö5 —Å–º.
‚úÖ–ü–æ–∫—Ä—ã—Ç–∏–µ –º–∞—Ç–æ–≤–æ–µ –∏–ª–∏ –≥–ª—è–Ω—Ü–µ–≤–æ–µ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç–∏–∫–µ—Ä –ø–∞–∫–∞)
‚úÖ–°—Ç–∏–∫–µ—Ä—ã –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –≤–ª–∞–≥–∏,–ø—ã–ª–∏ –∏ –≥—Ä—è–∑–∏.
‚úÖ–•–æ—Ä–æ—à–æ –∫–ª–µ—è—Ç—Å—è, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã —Ä–µ—à–∏—Ç–µ –∏—Ö –æ—Ç–∫–ª–µ–∏—Ç—å —Å–ª–µ–¥–æ–≤ –ù–ï –æ—Å—Ç–∞–Ω–µ—Ç—Å—è. ''', reply_markup=False)